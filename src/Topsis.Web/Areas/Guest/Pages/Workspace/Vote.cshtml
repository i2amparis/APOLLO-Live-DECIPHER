@page
@model Workspace.VoteModel
@{
    int answerIndex = 0;
    var alternativeValues = Model.ViewModel.Settings.AlternativeRange.Select(x => x.Value).OrderBy(x => x).ToArray();
    var altLowerValue = alternativeValues.First();
    var altUpperValue = alternativeValues.Last();
}
<h2>@Model.ViewModel.WorkspaceTitle</h2>
<p>@(Model.ViewModel.VoteFormTitle ?? "Please answer the following questions.")</p>

<div class="row pt-2">
    <div class="col-md-8">

        <form method="post" class="no-ajax">
            <input type="hidden" asp-for="Data.Id" />
            <div asp-validation-summary="All" class="text-danger"></div>

            @foreach (var criterion in Model.ViewModel.CriteriaOrdered)
            {
                <div class="card mt-3 text-white">
                    <div class="card-body">
                        <h5 class="card-title">How relevant are the following indicators for you?</h5>

                        <table class="card-text table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">&nbsp;</th>
                                    @foreach (var answer in Model.ViewModel.AlternativeRange)
                                    {
                                        <th width="13%">@(answer.Name ?? answer.Value.ToString())</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var alternative in Model.ViewModel.AlternativesOrdered)
                                {
                                    double? loadedAnswerValue = Model.ViewModel.StakeholderAnswers?.FirstOrDefault(x => x.CriterionId == criterion.Id && x.AlternativeId == alternative.Key)?.AnswerValue;
                                    var errorId = $"{criterion.Id}_{alternative.Key}_error";
                                    bool? isMyTopsisAboveGroup = Model.ViewModel.Tips.TryGetValue(alternative.Key, out var tip) ? tip.IsMyTopsisAboveGroup : (bool?)null;
                                    var should_highlight = isMyTopsisAboveGroup.HasValue && (isMyTopsisAboveGroup == true ? loadedAnswerValue != altLowerValue : loadedAnswerValue != altUpperValue);

                                    <tr class="@(should_highlight ? (isMyTopsisAboveGroup == true ? "table-info" : "table-danger") : "")">
                                        <th class="text-center" scope="row">
                                            @alternative.Value
                                            <input type="hidden" name="Data.Answers[@answerIndex].CriterionId" value="@criterion.Id" />
                                            <input type="hidden" name="Data.Answers[@answerIndex].AlternativeId" value="@alternative.Key" />
                                            <div class="text-danger field-validation-valid" data-valmsg-for="Data.Answers[@answerIndex].Value" data-valmsg-replace="true"></div>
                                        </th>

                                        @foreach (var answer in Model.ViewModel.AlternativeRange)
                                        {

                                            var id = $"{criterion.Id}_{alternative.Key}_{answer.Value}";
                                            <td>
                                                <input type="radio" value="@answer.Value" id="@id" data-val="true"
                                                       data-val-required="*required"
                                                       class="form-control" name="Data.Answers[@answerIndex].Value"
                                                       aria-describedby="@errorId"
                                                       @(loadedAnswerValue == answer.Value ? "checked='checked'" : "")>

                                            </td>
                                        }
                                    </tr>

                                    @if (should_highlight)
                                    {
                                        <tr class="@(tip.IsMyTopsisAboveGroup ? "table-info" : "table-info")">
                                            @if (tip.IsMyTopsisAboveGroup)
                                            {
                                                <td colspan="@(Model.ViewModel.AlternativeRange.Count + 1)"> Would you like to <strong>decrease</strong> your vote on this alternative?</td>
                                            }
                                            else
                                            {
                                                <td colspan="@(Model.ViewModel.AlternativeRange.Count + 1)"> Would you like to <strong class="">increase</strong> your vote on this alternative?</td>
                                            }
                                        </tr>
                                    }

                                    answerIndex++;
                                }
                            </tbody>

                        </table>
                    </div>
                </div>
            }

            <div class="card mt-3">
                <div class="card-body">
                    <h5 class="card-title">Overall, how relevant is the following indicator category for you?</h5>
                    @{
                        var importanceIndex = 0;

                        <table class="card-text table table-striped">
                            <thead>

                                <tr>
                                    <th class="text-center" scope="col">&nbsp;</th>
                                    @foreach (var importance in Model.ViewModel.CriteriaImportanceRange)
                                    {
                                        <th scope="col" class="text-center">@(importance.Name)</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var criterion in Model.ViewModel.CriteriaOrdered)
                                {
                                    double? loadedCriterionWeight = Model.ViewModel.StakeholderAnswers?.FirstOrDefault(x => x.CriterionId == criterion.Id)?.CriterionWeight;
                                    var errorId = $"importance_error_{criterion.Id}";

                                    <tr class="">
                                        <th scope="row" class="text-center">
                                            @criterion.Title
                                            <input type="hidden" name="Data.CriteriaImportance[@importanceIndex].Key" value="@criterion.Id" />
                                            <div class="text-danger field-validation-valid" data-valmsg-for="Data.CriteriaImportance[@importanceIndex].Value" data-valmsg-replace="true"></div>
                                        </th>
                                        @foreach (var importance in Model.ViewModel.CriteriaImportanceRange)
                                        {
                                            var id = $"importance_{criterion.Id}_{importance.Value}";

                                            <td>
                                                <input type="radio" value="@importance.Value" id="@id" data-val="true"
                                                       data-val-required="*required"
                                                       class="form-control" name="Data.CriteriaImportance[@importanceIndex].Value"
                                                       aria-describedby="@errorId"
                                                       @(loadedCriterionWeight == importance.Value ? "checked='checked'" : "")>


                                            </td>
                                        }
                                    </tr>

                                    importanceIndex++;

                                }
                            </tbody>

                        </table>

                    }

                </div>
            </div>

            <div class="form-group pt-3">
                <div asp-validation-summary="All" class="text-danger"></div>

                <input type="submit" value="Submit" class="btn btn-dark float-right" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

